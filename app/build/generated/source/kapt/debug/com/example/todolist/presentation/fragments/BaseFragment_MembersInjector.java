// Generated by Dagger (https://dagger.dev).
package com.example.todolist.presentation.fragments;

import com.example.todolist.presentation.adapter.CategoryAdapter;
import com.example.todolist.presentation.adapter.TasksAdapter;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Named;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseFragment_MembersInjector implements MembersInjector<BaseFragment> {
  private final Provider<TasksAdapter> adapterProvider;

  private final Provider<CategoryAdapter> adapter2Provider;

  public BaseFragment_MembersInjector(Provider<TasksAdapter> adapterProvider,
      Provider<CategoryAdapter> adapter2Provider) {
    this.adapterProvider = adapterProvider;
    this.adapter2Provider = adapter2Provider;
  }

  public static MembersInjector<BaseFragment> create(Provider<TasksAdapter> adapterProvider,
      Provider<CategoryAdapter> adapter2Provider) {
    return new BaseFragment_MembersInjector(adapterProvider, adapter2Provider);
  }

  @Override
  public void injectMembers(BaseFragment instance) {
    injectAdapter(instance, adapterProvider.get());
    injectAdapter2(instance, adapter2Provider.get());
  }

  @InjectedFieldSignature("com.example.todolist.presentation.fragments.BaseFragment.adapter")
  @Named("base_fragment")
  public static void injectAdapter(BaseFragment instance, TasksAdapter adapter) {
    instance.adapter = adapter;
  }

  @InjectedFieldSignature("com.example.todolist.presentation.fragments.BaseFragment.adapter2")
  public static void injectAdapter2(BaseFragment instance, CategoryAdapter adapter2) {
    instance.adapter2 = adapter2;
  }
}
