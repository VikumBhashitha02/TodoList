// Generated by Dagger (https://dagger.dev).
package com.example.todolist.presentation.br;

import com.example.todolist.data.repository.TaskCategoryRepositoryImpl;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OnCompletedBroadcastReceiver_MembersInjector implements MembersInjector<OnCompletedBroadcastReceiver> {
  private final Provider<TaskCategoryRepositoryImpl> repositoryProvider;

  public OnCompletedBroadcastReceiver_MembersInjector(
      Provider<TaskCategoryRepositoryImpl> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  public static MembersInjector<OnCompletedBroadcastReceiver> create(
      Provider<TaskCategoryRepositoryImpl> repositoryProvider) {
    return new OnCompletedBroadcastReceiver_MembersInjector(repositoryProvider);
  }

  @Override
  public void injectMembers(OnCompletedBroadcastReceiver instance) {
    injectRepository(instance, repositoryProvider.get());
  }

  @InjectedFieldSignature("com.example.todolist.presentation.br.OnCompletedBroadcastReceiver.repository")
  public static void injectRepository(OnCompletedBroadcastReceiver instance,
      TaskCategoryRepositoryImpl repository) {
    instance.repository = repository;
  }
}
