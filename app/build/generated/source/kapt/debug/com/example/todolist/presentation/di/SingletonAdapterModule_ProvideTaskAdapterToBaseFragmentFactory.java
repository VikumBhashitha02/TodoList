// Generated by Dagger (https://dagger.dev).
package com.example.todolist.presentation.di;

import com.example.todolist.presentation.adapter.TasksAdapter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SingletonAdapterModule_ProvideTaskAdapterToBaseFragmentFactory implements Factory<TasksAdapter> {
  @Override
  public TasksAdapter get() {
    return provideTaskAdapterToBaseFragment();
  }

  public static SingletonAdapterModule_ProvideTaskAdapterToBaseFragmentFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static TasksAdapter provideTaskAdapterToBaseFragment() {
    return Preconditions.checkNotNullFromProvides(SingletonAdapterModule.INSTANCE.provideTaskAdapterToBaseFragment());
  }

  private static final class InstanceHolder {
    private static final SingletonAdapterModule_ProvideTaskAdapterToBaseFragmentFactory INSTANCE = new SingletonAdapterModule_ProvideTaskAdapterToBaseFragmentFactory();
  }
}
